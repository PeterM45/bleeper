name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Test
        run: npm test

      - name: Check version consistency
        run: npm run check-version

  publish:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Publish to npm (as unscoped package)
        run: |
          # Install jq for JSON manipulation
          sudo apt-get update && sudo apt-get install -y jq
          # Create temporary package.json with unscoped name for npm
          jq '.name = "bleeper" | del(.publishConfig)' package.json > package-npm.json
          mv package.json package-github.json
          mv package-npm.json package.json
          npm publish --access public || echo "Version already published to npm"
          # Restore original package.json
          mv package-github.json package.json
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup Node.js for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://npm.pkg.github.com'

      - name: Publish to GitHub Packages (as scoped package)
        run: npm publish --access public || echo "Version already published to GitHub Packages"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
